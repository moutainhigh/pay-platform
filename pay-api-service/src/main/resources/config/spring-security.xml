<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-4.1.xsd ">

    <!-- 实现静态资源访问, 避免被spring security所过滤 -->
    <security:http pattern="/resources/**" security="none" create-session="never"/>
    <security:http pattern="/static/**" security="none" create-session="never"/>

    <!-- 过滤器配置,spring编码过滤器 -->
    <bean id="springUtf8Encoding" class="org.springframework.web.filter.CharacterEncodingFilter">
        <property name="encoding" value="utf-8"/>
        <property name="forceEncoding" value="true"/>
    </bean>

    <!-- 配置接口安全过滤器 -->
    <bean id="apiSecurityFilter" class="com.pay.platform.security.ApiSecurityFilter"/>

    <!-- 开放接口,不进行安全过滤,例如各类回调接口 -->
    <security:http pattern="/openApi/**" create-session="never" auto-config="true" once-per-request="true">
        <security:csrf disabled="true"/>
        <security:custom-filter ref="springUtf8Encoding" position="FIRST"/>
    </security:http>

    <!-- view下面页面允许直接访问 -->
    <security:http pattern="/view/**" create-session="never" auto-config="true" once-per-request="true">
        <security:csrf disabled="true"/>
        <security:custom-filter ref="springUtf8Encoding" position="FIRST"/>
    </security:http>

    <!-- 拦截剩余所有接口请求,进行安全过滤 -->
    <security:http pattern="/**" create-session="never" auto-config="true" once-per-request="true">
        <security:csrf disabled="true"/>
        <security:custom-filter ref="springUtf8Encoding" position="FIRST"/>
        <security:custom-filter ref="apiSecurityFilter" after="FIRST"/>
    </security:http>

    <!-- 配置认证管理器,后台管理系统才有用,接口暂时用 -->
    <security:authentication-manager alias="securityAuthenticationManager">
        <security:authentication-provider>
            <security:user-service>
                <security:user name="admin" password="admin123admin" authorities="ROLE_ADMIN,ROLE_USER"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

</beans>