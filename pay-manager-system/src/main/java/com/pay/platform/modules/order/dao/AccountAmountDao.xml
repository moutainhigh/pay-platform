<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pay.platform.modules.order.dao.AccountAmountDao">

    <select id="queryUserIdByAgentId" parameterType="java.lang.String" resultType="java.lang.String">
        select id from tb_sys_user
        where agent_id = #{agentId}
    </select>

    <select id="queryUserIdByMerchantId" parameterType="java.lang.String" resultType="java.lang.String">
        select id from tb_sys_user
        where merchant_id = #{merchantId}
    </select>

    <select id="queryAccountAmountInfo" resultType="java.util.Map">
        select * from tb_account_amount
        where user_id = #{userId};
    </select>

    <update id="addAccountAmount">
        update tb_account_amount set account_amount = (account_amount + abs(#{amount}))
        where user_id = #{userId}
    </update>

    <insert id="addAccountAmountBillLog">
        insert into tb_account_amount_log (id , user_id ,	ref_order_no , type , amount , create_time )
        values( uuid() , #{userId} , #{refOrderNo} , #{type} , #{amount} , now())
    </insert>

    <update id="addFreezeAmount">
        update tb_account_amount set freeze_amount = (freeze_amount + abs(#{amount}))
        where user_id = #{userId}
    </update>

    <insert id="addFreezeAmountBillLog">
        insert into tb_freeze_amount_log (id , user_id ,	ref_order_no , type , amount , create_time )
        values( uuid() , #{userId} , #{refOrderNo} , #{type} , #{amount} , now())
    </insert>

    <update id="reduceAccountAmount">
        update tb_account_amount set account_amount = (account_amount - abs(#{amount}))
        where user_id = #{userId} and account_amount &gt;= abs(#{amount})
    </update>

    <update id="reduceFreezeAmount">
        update tb_account_amount set freeze_amount = (freeze_amount - abs(#{amount}))
        where user_id = #{userId} and freeze_amount &gt;= abs(#{amount})
    </update>

</mapper>