<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pay.platform.modules.loopMgr.dao.LoopMgrDao">

    <select id="queryTradeCodeList" parameterType="TradeCodeModel" resultType="TradeCodeModel">
        select *
        from tb_merchant_trade_code
        where channel_code = #{channelCode} and merchant_id = #{merchantId}
        <if test="codeNum != null and codeNum != '' ">
            and code_num like CONCAT('%','${codeNum}','%')
        </if>
        <if test="loginAccount != null and loginAccount != '' ">
            and login_Account like CONCAT('%','${loginAccount}','%')
        </if>
        <if test="realName != null and realName != '' ">
            and real_Name like CONCAT('%','${realName}','%')
        </if>
    </select>

    <select id="queryTradeCodeById" parameterType="java.lang.String" resultType="TradeCodeModel">
        select *
        from tb_merchant_trade_code where id = #{id}
    </select>

    <insert id="addTradeCode" parameterType="TradeCodeModel">
        insert into tb_merchant_trade_code(id , channel_id , channel_code , merchant_id ,  code_num , secret , login_account ,  code_link , create_time)
        values(uuid() , #{channelId} , #{channelCode} , #{merchantId} , #{codeNum} , #{secret} , #{loginAccount} , #{codeLink} , now());
    </insert>

    <delete id="deleteTradeCode">
        delete from tb_merchant_trade_code where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteTradeCodeByLogic">
        update tb_merchant_trade_code set is_Del = 1 where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateTradeCode" parameterType="TradeCodeModel">
        update tb_merchant_trade_code
        set min_amount = #{minAmount} , max_amount = #{maxAmount} , day_amount_limit = #{dayAmountLimit} , code_num = #{codeNum} , secret = #{secret} , login_account = #{loginAccount} , real_name = #{realName} , code_link = #{codeLink} , zfb_user_id = #{zfbUserId}
        where id = #{id}
    </update>

    <select id="queryExistsByCode" parameterType="TradeCodeModel" resultType="TradeCodeModel">
        select *
        from tb_merchant_trade_code
        where ( code_num = #{codeNum} or secret = #{secret} or login_account = #{loginAccount} )
        <if test="id != null and id != '' ">
            and ( id != #{id} )
        </if>
        limit 0 , 1
    </select>

    <insert id="batchAddTradeCode" parameterType="java.util.List">
        insert into tb_merchant_trade_code(id , channel_id , channel_code , merchant_id , code_num , secret , login_account , code_link , create_time)
        values
        <foreach collection="tradeCodeList" item="item" index="index" separator=",">
            (uuid() , #{item.channelId} , #{item.channelCode} , #{item.merchantId} , #{item.codeNum} , #{item.secret} , #{item.loginAccount} , #{item.codeLink} , now())
        </foreach>
    </insert>

    <select id="queryTradeCodeSuccessRateList" resultType="java.util.Map">
        select tmrc.id , tmrc.channel_id as channelId , tmrc.channel_code as channelCode , tmrc.merchant_id as merchantId,
        tmrc.min_amount as minAmount ,tmrc.max_amount as maxAmount , tmrc.day_amount_limit as dayAmountLimit,
        tmrc.code_num as codeNum , tmrc.secret , tmrc.login_account as loginAccount , tmrc.real_name as realName ,
        tmrc.code_link as codeLink , tmrc.zfb_user_id as zfbUserId , tmrc.create_time as createTime , tmrc.enabled ,
        (
        select count(1) from tb_order tor
        where tor.trade_code_id = tmrc.id
        <if test="beginTime != null and beginTime != '' ">
            and tor.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            and tor.create_time &lt;= #{endTime}
        </if>
        ) as totalOrderCount,
        (
        select count(1) from tb_order tor
        where tor.trade_code_id = tmrc.id and tor.pay_status = 'payed'
        <if test="beginTime != null and beginTime != '' ">
            and tor.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            and tor.create_time &lt;= #{endTime}
        </if>
        ) as scuccessCount ,
        (
        select IFNULL(sum(tor.order_amount) ,0) from tb_order tor
        where tor.trade_code_id = tmrc.id
        <if test="beginTime != null and beginTime != '' ">
            and tor.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            and tor.create_time &lt;= #{endTime}
        </if>
        ) as totalOrderAmount,
        (
        select IFNULL(sum(tor.order_amount) ,0) from tb_order tor
        where tor.trade_code_id = tmrc.id and tor.pay_status = 'payed'
        <if test="beginTime != null and beginTime != '' ">
            and tor.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            and tor.create_time &lt;= #{endTime}
        </if>
        ) as successAmount
        from tb_merchant_trade_code tmrc
        where 1 = 1
        <if test="tradeCode.merchantId != null and tradeCode.merchantId != '' ">
            and tmrc.merchant_id like CONCAT('%','${tradeCode.merchantId}','%')
        </if>
        <if test="tradeCode.channelCode != null and tradeCode.channelCode != '' ">
            and tmrc.channel_code like CONCAT('%','${tradeCode.channelCode}','%')
        </if>
        <if test="tradeCode.codeNum != null and tradeCode.codeNum != '' ">
            and tmrc.code_num like CONCAT('%','${tradeCode.codeNum}','%')
        </if>
        <if test="tradeCode.loginAccount != null and tradeCode.loginAccount != '' ">
            and tmrc.login_Account like CONCAT('%','${tradeCode.loginAccount}','%')
        </if>
        <if test="merchantIdList != null and merchantIdList != '' ">
            and tmrc.merchant_id in
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>

    <delete id="updateTradeCodeEnabled" parameterType="java.lang.String">
        update tb_merchant_trade_code set enabled = #{enabled} where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="queryTotalSuccessRate" resultType="java.util.Map">
        select
        (
        select count(1) from tb_order tor
        where 1 = 1
        <if test="merchantId!= null and merchantId != '' ">
            and tor.merchant_id = #{merchantId}
        </if>
        <if test="channelId!= null and channelId != '' ">
            and tor.channel_Id = #{channelId}
        </if>
        <if test="beginTime != null and beginTime != '' ">
            and tor.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            and tor.create_time &lt;= #{endTime}
        </if>
        <if test="merchantIdList != null and merchantIdList != '' ">
            and tor.merchant_id in
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        ) as totalOrderCount,
        (
        select count(1) from tb_order tor
        where 1 = 1 and tor.pay_status = 'payed'
        <if test="merchantId!= null and merchantId != '' ">
            and tor.merchant_id = #{merchantId}
        </if>
        <if test="channelId!= null and channelId != '' ">
            and tor.channel_Id = #{channelId}
        </if>
        <if test="beginTime != null and beginTime != '' ">
            and tor.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            and tor.create_time &lt;= #{endTime}
        </if>
        <if test="merchantIdList != null and merchantIdList != '' ">
            and tor.merchant_id in
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        ) as scuccessCount ,
        (
        select IFNULL(sum(tor.order_amount) ,0) from tb_order tor
        where 1 = 1
        <if test="merchantId!= null and merchantId != '' ">
            and tor.merchant_id = #{merchantId}
        </if>
        <if test="channelId!= null and channelId != '' ">
            and tor.channel_Id = #{channelId}
        </if>
        <if test="beginTime != null and beginTime != '' ">
            and tor.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            and tor.create_time &lt;= #{endTime}
        </if>
        <if test="merchantIdList != null and merchantIdList != '' ">
            and tor.merchant_id in
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        ) as totalOrderAmount,
        (
        select IFNULL(sum(tor.pay_float_amount) ,0) from tb_order tor
        where 1 = 1 and tor.pay_status = 'payed'
        <if test="merchantId!= null and merchantId != '' ">
            and tor.merchant_id = #{merchantId}
        </if>
        <if test="channelId!= null and channelId != '' ">
            and tor.channel_Id = #{channelId}
        </if>
        <if test="beginTime != null and beginTime != '' ">
            and tor.create_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime != '' ">
            and tor.create_time &lt;= #{endTime}
        </if>
        <if test="merchantIdList != null and merchantIdList != '' ">
            and tor.merchant_id in
            <foreach collection="merchantIdList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        ) as successAmount
        from dual

    </select>

    <select id="queryMerchantInfoByTradeCode" parameterType="java.lang.String" resultType="java.util.Map">
        select tm.merchant_no merchantNo , tm.merchant_secret merchantSecret , tmtc.code_num codeNum
        from tb_merchant_trade_code tmtc
        inner join tb_merchant tm on tm.id = tmtc.merchant_id
        where tmtc.code_num = #{codeNum};
    </select>

</mapper>