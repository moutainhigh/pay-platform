<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pay.platform.modules.merchant.dao.MerchantDao">

    <select id="queryMerchantList" parameterType="MerchantModel" resultType="MerchantModel">
        select id, merchant_no, merchant_name, phone,real_name,check_status, identity_code, create_time,check_desc, agent_id , need_notify_withdraw
        from tb_merchant
        <where>
            and is_del = 0
            <if test="agentId != null and agentId != '' ">
                and agent_Id = #{agentId}
            </if>
            <if test="merchantNo != null and merchantNo != '' ">
                and merchant_no like CONCAT('%','${merchantNo}','%')
            </if>
            <if test="merchantName != null and merchantName != '' ">
                and merchant_name like CONCAT('%','${merchantName}','%')
            </if>
            <if test="phone != null and phone != '' ">
                and phone like CONCAT('%','${phone}','%')
            </if>
            <if test="realName != null and realName != '' ">
                and real_name like CONCAT('%','${realName}','%')
            </if>
            <if test="identityCode != null and identityCode != '' ">
                and identity_code like CONCAT('%','${identityCode}','%')
            </if>
        </where>
    </select>

    <select id="queryMerchantById" parameterType="java.lang.String" resultType="MerchantModel">
        select  id,  merchant_no, merchant_name, phone,  real_name, check_status, create_time,  identity_code,
            id_card_img1,  id_card_img2,icp_img,  check_desc, agent_id , need_notify_withdraw
        from tb_merchant
        where id = #{id}
    </select>

    <insert id="addMerchant" parameterType="MerchantModel">
        insert into  tb_merchant
        (id, merchant_name, phone,  real_name, identity_code,  id_card_img1, id_card_img2,  icp_img, create_time,  merchant_no,
         notify_secret,   merchant_secret,agent_id,need_notify_withdraw)
        values (#{id}, #{merchantName},   #{phone},#{realName},  #{identityCode},  #{idCardImg1},    #{idCardImg2}, #{icpImg},
                now(),   #{merchantNo},   #{notifySecret}, #{merchantSecret},   #{agentId},#{needNotifyWithdraw});
    </insert>

    <delete id="deleteMerchant">
        delete from tb_merchant where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteMerchantByLogic">
        update tb_merchant set is_Del = 1 where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateMerchant" parameterType="MerchantModel">
        update tb_merchant
        set merchant_name = #{merchantName},
            phone         = #{phone},
            real_name     = #{realName},
            identity_code = #{identityCode},
            id_card_img1  = #{idCardImg1},
            id_card_img2  = #{idCardImg2},
            icp_img       = #{icpImg},
            agent_id       = #{agentId},
            need_notify_withdraw = #{needNotifyWithdraw}
        where id = #{id}
    </update>

    <select id="queryMerchantByIMerchantNo" parameterType="java.lang.String" resultType="MerchantModel">
        select  id, merchant_no, merchant_name, phone,real_name,check_status, identity_code,  create_time,check_desc , agent_id
        from tb_merchant
        where merchant_no = #{merchantNo}
    </select>

    <select id="queryMerchantSecretByIMerchantNo" parameterType="java.lang.String" resultType="MerchantModel">
        select *
        from tb_merchant
        where merchant_no = #{merchantNo}
    </select>


    <select id="queryMerchantIdAndNameList" parameterType="java.lang.String" resultType="java.util.Map">
        select id , merchant_name
        from tb_merchant
        <where>
            and is_del = 0
            <if test="merchantId != null and merchantId != '' ">
                and id = #{merchantId}
            </if>
            <if test="agentId != null and agentId != '' ">
                and agent_id = #{agentId}
            </if>
        </where>
    </select>


    <update id="review" parameterType="MerchantModel">
        update tb_merchant
        set
            check_status=#{checkStatus,jdbcType=VARCHAR},
            check_desc=#{checkDesc,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
          and check_status = 'waitCheck'
    </update>

    <select id="queryMerchantAmountInfo" parameterType="java.lang.String" resultType="java.util.Map">
        select IFNULL(( select sum(actual_amount)  from tb_order tor where tor.merchant_id = #{merchantId} and tor.pay_status = 'payed') ,0) as totalAmount ,
            IFNULL( (select tmwn.last_notify_amount  from tb_merchant_withdraw_notify tmwn  where tmwn.merchant_id = #{merchantId} ), 0) as lastNotifyAmount
        from dual
    </select>

    <insert id="saveMerchantNotifyWithdrawAmount">
         replace into tb_merchant_withdraw_notify
         (id , merchant_id , last_notify_amount ,  create_time)
        values
        (uuid() , #{merchantId} , #{totalAmount} , now());
    </insert>

</mapper>